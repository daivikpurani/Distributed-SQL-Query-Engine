warning: unused import: `super::Row`
 --> common/src/models/condition.rs:4:5
  |
4 | use super::Row;
  |     ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: ambiguous glob re-exports
  --> common/src/models/mod.rs:14:9
   |
14 | pub use condition::*;
   |         ^^^^^^^^^^^^ the name `DataType` in the type namespace is first re-exported here
...
21 | pub use shard_key::*;
   |         ------------ but the name `DataType` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> common/src/models/mod.rs:20:9
   |
20 | pub use shard_info::*;
   |         ^^^^^^^^^^^^^ the name `ShardType` in the type namespace is first re-exported here
21 | pub use shard_key::*;
22 | pub use shard_distribution::*;
   |         --------------------- but the name `ShardType` in the type namespace is also re-exported here

warning: unused doc comment
   --> common/src/utils/tracer.rs:121:1
    |
121 | /// Global tracer instance
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ rustdoc does not generate documentation for macro invocations
    |
    = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion
    = note: `#[warn(unused_doc_comments)]` on by default

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `Condition` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `Condition` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `Operator` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `Operator` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `DataType` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `DataType` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `PlanNode` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `PlanNode` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `NodeType` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `NodeType` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> common/src/lib.rs:11:9
   |
11 | pub use models::*;
   |         ^^^^^^^^^ the name `Row` in the type namespace is first re-exported here
12 | pub use proto::*;
   |         -------- but the name `Row` in the type namespace is also re-exported here

warning: unused variable: `ranges_str`
   --> common/src/models/shard_distribution.rs:114:21
    |
114 |         if let Some(ranges_str) = self.get_parameter("ranges") {
    |                     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_ranges_str`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `common` (lib) generated 11 warnings (run `cargo fix --lib -p common` to apply 1 suggestion)
warning: unused imports: `Request`, `Response`, and `Status`
 --> coordinator/src/main.rs:4:32
  |
4 | use tonic::{transport::Server, Request, Response, Status};
  |                                ^^^^^^^  ^^^^^^^^  ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error`
 --> coordinator/src/main.rs:5:21
  |
5 | use tracing::{info, error, warn};
  |                     ^^^^^

warning: unused import: `uuid::Uuid`
 --> coordinator/src/main.rs:7:5
  |
7 | use uuid::Uuid;
  |     ^^^^^^^^^^

warning: unused import: `WorkerInfo`
 --> coordinator/src/coordinator_service.rs:6:31
  |
6 | use crate::{CoordinatorState, WorkerInfo};
  |                               ^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> coordinator/src/query_planner.rs:1:5
  |
1 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `debug`
 --> coordinator/src/query_planner.rs:2:21
  |
2 | use tracing::{info, debug};
  |                     ^^^^^

warning: unused import: `info`
 --> coordinator/src/shard_manager.rs:2:15
  |
2 | use tracing::{info, debug};
  |               ^^^^

warning: unused import: `common::proto::coordinator_service_server::CoordinatorService`
  --> coordinator/src/main.rs:14:5
   |
14 | use common::proto::coordinator_service_server::CoordinatorService;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variants `Range` and `RoundRobin` are never constructed
  --> coordinator/src/shard_manager.rs:16:5
   |
14 | pub enum ShardType {
   |          --------- variants in this enum
15 |     Hash,
16 |     Range,
   |     ^^^^^
17 |     RoundRobin,
   |     ^^^^^^^^^^
   |
   = note: `ShardType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: field `shard_type` is never read
  --> coordinator/src/shard_manager.rs:23:5
   |
21 | pub struct ShardManager {
   |            ------------ field in this struct
22 |     shards: HashMap<String, Vec<ShardInfo>>,
23 |     shard_type: ShardType,
   |     ^^^^^^^^^^
   |
   = note: `ShardManager` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `coordinator` (bin "coordinator") generated 10 warnings (run `cargo fix --bin "coordinator"` to apply 8 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.12s
     Running `target/debug/coordinator --port 50051`
2025-10-04T18:17:39.686496Z  INFO coordinator: Starting Coordinator on port 50051
2025-10-04T18:17:39.687084Z  INFO coordinator: Coordinator server listening on 127.0.0.1:50051
2025-10-04T18:18:23.665810Z  INFO coordinator::coordinator_service: Executing query b577f45c-5e30-48fc-ab28-58bc4b7ed461: SELECT name FROM users WHERE age > 30
2025-10-04T18:18:23.666043Z  INFO coordinator::coordinator_service: Query b577f45c-5e30-48fc-ab28-58bc4b7ed461 completed in 0ms
2025-10-04T18:18:32.594118Z  INFO coordinator::coordinator_service: Executing query 7e0351ed-8ce2-47ae-9181-e758b5d53680: SELECT * FROM users
2025-10-04T18:18:32.594317Z  INFO coordinator::coordinator_service: Query 7e0351ed-8ce2-47ae-9181-e758b5d53680 completed in 0ms
